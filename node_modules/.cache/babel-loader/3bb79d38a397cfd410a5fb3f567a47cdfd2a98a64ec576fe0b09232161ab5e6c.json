{"ast":null,"code":"var _jsxFileName = \"/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport { useLocation } from \"react-router-dom\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst depotIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167707.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167729.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nconst OptimalRoutePage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    depot,\n    deliveryPoints\n  } = location.state || {}; // Access passed data\n\n  if (!depot || !deliveryPoints) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No route data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Combine depot and delivery points into a single route\n  const route = [[depot.lat, depot.lng], ...deliveryPoints.map(point => [point.lat, point.lng])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: depot || [51.505, -0.09],\n      zoom: 13,\n      className: \"h-full w-full\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [depot.lat, depot.lng],\n        icon: depotIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), deliveryPoints.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [point.lat, point.lng],\n        icon: deliveryPointIcon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"red\",\n        weight: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimalRoutePage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = OptimalRoutePage;\nexport default OptimalRoutePage;\nvar _c;\n$RefreshReg$(_c, \"OptimalRoutePage\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Polyline","useLocation","L","jsxDEV","_jsxDEV","depotIcon","icon","iconUrl","iconSize","iconAnchor","deliveryPointIcon","OptimalRoutePage","_s","location","depot","deliveryPoints","state","children","fileName","_jsxFileName","lineNumber","columnNumber","route","lat","lng","map","point","className","center","zoom","url","attribution","position","index","positions","color","weight","_c","$RefreshReg$"],"sources":["/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport { useLocation } from \"react-router-dom\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nconst depotIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167707.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167729.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nconst OptimalRoutePage = () => {\n  const location = useLocation();\n  const { depot, deliveryPoints } = location.state || {}; // Access passed data\n\n  if (!depot || !deliveryPoints) {\n    return <p>No route data available.</p>;\n  }\n\n  // Combine depot and delivery points into a single route\n  const route = [[depot.lat, depot.lng], ...deliveryPoints.map((point) => [point.lat, point.lng])];\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\">\n      <MapContainer\n        center={depot || [51.505, -0.09]}\n        zoom={13}\n        className=\"h-full w-full\"\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {/* Depot Marker */}\n        <Marker position={[depot.lat, depot.lng]} icon={depotIcon} />\n        {/* Delivery Points Markers */}\n        {deliveryPoints.map((point, index) => (\n          <Marker key={index} position={[point.lat, point.lng]} icon={deliveryPointIcon} />\n        ))}\n        {/* Route as a Red Polyline */}\n        <Polyline positions={route} color=\"red\" weight={4} />\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default OptimalRoutePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}