{"ast":null,"code":"var _jsxFileName = \"/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst depotIcon = L.icon({\n  iconUrl: \"https://img.icons8.com/?size=100&id=13800&format=png&color=000000\",\n  // Red pin icon URL\n  iconSize: [30, 41],\n  iconAnchor: [12, 41]\n});\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://img.icons8.com/?size=100&id=7880&format=png&color=000000\",\n  // Black pin icon URL\n  iconSize: [35, 41],\n  iconAnchor: [12, 41]\n});\nconst OptimalRoutePage = _ref => {\n  let {\n    depot,\n    deliveryPoints\n  } = _ref;\n  // Combine depot and delivery points into a single route\n  const route = depot ? [depot, ...deliveryPoints] : deliveryPoints;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      className: \"h-full w-full\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), depot && /*#__PURE__*/_jsxDEV(Marker, {\n        position: depot,\n        icon: depotIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this), deliveryPoints.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point,\n        icon: deliveryPointIcon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), route.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"red\",\n        weight: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = OptimalRoutePage;\nexport default OptimalRoutePage;\nvar _c;\n$RefreshReg$(_c, \"OptimalRoutePage\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Polyline","L","jsxDEV","_jsxDEV","depotIcon","icon","iconUrl","iconSize","iconAnchor","deliveryPointIcon","OptimalRoutePage","_ref","depot","deliveryPoints","route","className","children","center","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","map","point","index","length","positions","color","weight","_c","$RefreshReg$"],"sources":["/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nconst depotIcon = L.icon({\n  iconUrl: \"https://img.icons8.com/?size=100&id=13800&format=png&color=000000\", // Red pin icon URL\n  iconSize: [30, 41],\n  iconAnchor: [12, 41],\n});\n\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://img.icons8.com/?size=100&id=7880&format=png&color=000000\", // Black pin icon URL\n  iconSize: [35, 41],\n  iconAnchor: [12, 41],\n});\n\nconst OptimalRoutePage = ({ depot, deliveryPoints }) => {\n  // Combine depot and delivery points into a single route\n  const route = depot ? [depot, ...deliveryPoints] : deliveryPoints;\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\">\n      <MapContainer\n        center={[51.505, -0.09]}\n        zoom={13}\n        className=\"h-full w-full\"\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {/* Depot Marker */}\n        {depot && <Marker position={depot} icon={depotIcon} />}\n        {/* Delivery Points Markers */}\n        {deliveryPoints.map((point, index) => (\n          <Marker key={index} position={point} icon={deliveryPointIcon} />\n        ))}\n        {/* Route as a Red Polyline */}\n        {route.length > 1 && (\n          <Polyline positions={route} color=\"red\" weight={4} />\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default OptimalRoutePage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACzE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGH,CAAC,CAACI,IAAI,CAAC;EACvBC,OAAO,EAAE,mEAAmE;EAAE;EAC9EC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAGR,CAAC,CAACI,IAAI,CAAC;EAC/BC,OAAO,EAAE,kEAAkE;EAAE;EAC7EC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACrB,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAGC,IAAA,IAA+B;EAAA,IAA9B;IAAEC,KAAK;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACjD;EACA,MAAMG,KAAK,GAAGF,KAAK,GAAG,CAACA,KAAK,EAAE,GAAGC,cAAc,CAAC,GAAGA,cAAc;EAEjE,oBACEV,OAAA;IAAKY,SAAS,EAAC,0DAA0D;IAAAC,QAAA,eACvEb,OAAA,CAACN,YAAY;MACXoB,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;MACxBC,IAAI,EAAE,EAAG;MACTH,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAEzBb,OAAA,CAACL,SAAS;QACRqB,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrG,EAEDZ,KAAK,iBAAIT,OAAA,CAACJ,MAAM;QAAC0B,QAAQ,EAAEb,KAAM;QAACP,IAAI,EAAED;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAErDX,cAAc,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/BzB,OAAA,CAACJ,MAAM;QAAa0B,QAAQ,EAAEE,KAAM;QAACtB,IAAI,EAAEI;MAAkB,GAAhDmB,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,CAAC,EAEDV,KAAK,CAACe,MAAM,GAAG,CAAC,iBACf1B,OAAA,CAACH,QAAQ;QAAC8B,SAAS,EAAEhB,KAAM;QAACiB,KAAK,EAAC,KAAK;QAACC,MAAM,EAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEV,CAAC;AAACS,EAAA,GA5BIvB,gBAAgB;AA8BtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}