{"ast":null,"code":"var _jsxFileName = \"/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst depotIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167707.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167729.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nconst FitBounds = _ref => {\n  _s();\n  let {\n    route\n  } = _ref;\n  const map = useMap();\n  useEffect(() => {\n    if (route.length > 1) {\n      const bounds = route.map(_ref2 => {\n        let [lat, lng] = _ref2;\n        return [lat, lng];\n      });\n      map.fitBounds(bounds);\n    }\n  }, [route, map]);\n  return null;\n};\n_s(FitBounds, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = FitBounds;\nconst OptimalRoutePage = _ref3 => {\n  let {\n    depot,\n    deliveryPoints\n  } = _ref3;\n  // Combine depot and delivery points into a single route\n  const route = depot ? [[depot.lat, depot.lng], ...deliveryPoints.map(point => [point.lat, point.lng])] : [];\n  console.log(\"Route data:\", route); // Debugging\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: depot || [51.505, -0.09],\n      zoom: 13,\n      className: \"h-full w-full\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), depot && /*#__PURE__*/_jsxDEV(Marker, {\n        position: depot,\n        icon: depotIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), deliveryPoints.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: point,\n        icon: deliveryPointIcon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), route.length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"red\",\n          weight: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FitBounds, {\n          route: route\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = OptimalRoutePage;\nexport default OptimalRoutePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"FitBounds\");\n$RefreshReg$(_c2, \"OptimalRoutePage\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Marker","Polyline","useMap","L","jsxDEV","_jsxDEV","Fragment","_Fragment","depotIcon","icon","iconUrl","iconSize","iconAnchor","deliveryPointIcon","FitBounds","_ref","_s","route","map","length","bounds","_ref2","lat","lng","fitBounds","_c","OptimalRoutePage","_ref3","depot","deliveryPoints","point","console","log","className","children","center","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","index","positions","color","weight","_c2","$RefreshReg$"],"sources":["/home/tanusha/Documents/Projects/adsa/src/components/OptimalRoutePage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Polyline, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Custom icons\nconst depotIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167707.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nconst deliveryPointIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/167/167729.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nconst FitBounds = ({ route }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (route.length > 1) {\n      const bounds = route.map(([lat, lng]) => [lat, lng]);\n      map.fitBounds(bounds);\n    }\n  }, [route, map]);\n\n  return null;\n};\n\nconst OptimalRoutePage = ({ depot, deliveryPoints }) => {\n  // Combine depot and delivery points into a single route\n  const route = depot\n    ? [[depot.lat, depot.lng], ...deliveryPoints.map((point) => [point.lat, point.lng])]\n    : [];\n\n  console.log(\"Route data:\", route); // Debugging\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg p-6 mt-6 w-[90vw] h-[85vh]\">\n      <MapContainer\n        center={depot || [51.505, -0.09]}\n        zoom={13}\n        className=\"h-full w-full\"\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {/* Depot Marker */}\n        {depot && <Marker position={depot} icon={depotIcon} />}\n        {/* Delivery Points Markers */}\n        {deliveryPoints.map((point, index) => (\n          <Marker key={index} position={point} icon={deliveryPointIcon} />\n        ))}\n        {/* Route as a Red Polyline */}\n        {route.length > 1 && (\n          <>\n            <Polyline positions={route} color=\"red\" weight={4} />\n            <FitBounds route={route} />\n          </>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default OptimalRoutePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}